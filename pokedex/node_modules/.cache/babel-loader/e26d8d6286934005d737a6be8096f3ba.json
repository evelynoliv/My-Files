{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evely\\\\GitHub\\\\Portfolio\\\\pokedex\\\\src\\\\Components\\\\PokemonCard\\\\PokemonCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { BASE_URL } from \"../../Constants/url\";\nimport { Card, CardImg, TypesRow, Id } from \"./Style\";\nimport GlobalContextState from \"../../Contexts/GlobalContextState\";\nimport { goToDetails } from \"../../Routes/Coordinator\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addPokedex } from \"../../Services/addPokedex\";\nimport Loading from \"../../Constants/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardPokemon(_ref) {\n  _s();\n\n  let {\n    name,\n    pokemon,\n    addPokedex\n  } = _ref;\n  const navigate = useNavigate();\n  const [photoPokemon, setPhotoPokemon] = useState();\n  const [id, setId] = useState(0);\n  const [types, setTypes] = useState([]);\n  const {\n    setPokedex,\n    setOpen,\n    setOpenRelease\n  } = useContext(GlobalContextState);\n\n  const getInfoPokemon = async () => {\n    try {\n      const res = await axios.get(`${BASE_URL}/${name}`);\n      setPhotoPokemon(res.data.sprites.other[\"dream_world\"].front_default);\n      setId(res.data.id);\n      setTypes(res.data.types);\n    } catch (err) {\n      console.log(\"erro\", err.response);\n    }\n  };\n\n  const pokemonTypes = pokemon && types.map(types => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      type: types.type.name\n    }, types.type.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  });\n  useEffect(() => {\n    getInfoPokemon();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Id, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", id < 100 ? `#0${id}` : `#${id}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardImg, {\n        src: photoPokemon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pokemonTypes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addPokedex(pokemon, setPokedex),\n      children: \"Add to Pokedex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => goToDetails(navigate, name),\n      children: \"See Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardPokemon, \"y7t2gZ6dZbGlHrLgmlE713/6sDg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CardPokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardPokemon\");","map":{"version":3,"sources":["C:/Users/evely/GitHub/Portfolio/pokedex/src/Components/PokemonCard/PokemonCard.js"],"names":["React","useEffect","useState","useContext","axios","BASE_URL","Card","CardImg","TypesRow","Id","GlobalContextState","goToDetails","useNavigate","addPokedex","Loading","CardPokemon","name","pokemon","navigate","photoPokemon","setPhotoPokemon","id","setId","types","setTypes","setPokedex","setOpen","setOpenRelease","getInfoPokemon","res","get","data","sprites","other","front_default","err","console","log","response","pokemonTypes","map","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport  {BASE_URL}  from \"../../Constants/url\"\r\nimport { Card, CardImg, TypesRow, Id } from \"./Style\";\r\nimport GlobalContextState from \"../../Contexts/GlobalContextState\";\r\nimport { goToDetails } from \"../../Routes/Coordinator\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { addPokedex } from \"../../Services/addPokedex\";\r\nimport Loading from \"../../Constants/Loading\"\r\n\r\nexport default function CardPokemon({ name, pokemon, addPokedex }) {\r\n  const navigate = useNavigate();\r\n  const [photoPokemon, setPhotoPokemon] = useState();\r\n  const [id, setId] = useState(0);\r\n  const [types, setTypes] = useState([]);\r\n  const { setPokedex, setOpen, setOpenRelease } = useContext(GlobalContextState);\r\n\r\n  const getInfoPokemon = async () => {\r\n    try {\r\n      const res = await axios.get(`${BASE_URL}/${name}`);\r\n      setPhotoPokemon(res.data.sprites.other[\"dream_world\"].front_default);\r\n      setId(res.data.id);\r\n      setTypes(res.data.types);\r\n    } catch (err) {\r\n      console.log(\"erro\", err.response);\r\n    }\r\n  };\r\n\r\n  const pokemonTypes =\r\n  pokemon &&\r\n  types.map((types)=> {\r\n    return (\r\n      <div key={types.type.name} type={types.type.name}>\r\n        \r\n        </div>\r\n    )\r\n  })\r\n\r\n    useEffect(() => {\r\n      getInfoPokemon();\r\n    }, []);\r\n\r\n\r\n  return (\r\n    <Card>\r\n      <div>\r\n        <Id><p> {id < 100 ? `#0${id}` : `#${id}`}\r\n          </p></Id>\r\n        <CardImg src={photoPokemon} />\r\n        <p>{name}</p>\r\n        <p>{pokemonTypes}</p>\r\n      </div>\r\n      <button onClick={() => addPokedex(pokemon, setPokedex)}>\r\n        Add to Pokedex\r\n      </button>\r\n      <button onClick={() => goToDetails(navigate, name)}>\r\n        See Details\r\n      </button>\r\n    </Card>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}