{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\evely\\\\GitHub\\\\My-Files\\\\pokedex\\\\src\\\\Components\\\\PokedexCard\\\\PokedexCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Card, CardImg, DivImagem, TypesContainer, Id, TypesRow, TypeImg, Nome } from \"./Style\";\nimport GlobalStateContext from \"../../Contexts/GlobalContextState\";\nimport { goToDetails } from \"../../Routes/Coordinator\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loading from \"../../Constants/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CardPokemon(_ref) {\n  _s();\n\n  let {\n    name,\n    pokemon,\n    removePokedex\n  } = _ref;\n  const navigate = useNavigate();\n  const [fotoPokemon, setFotoPokemon] = useState();\n  const [id, setId] = useState(0);\n  const [types, setTypes] = useState([]);\n  const {\n    pokedex,\n    setPokedex,\n    setPokeSnackRelease,\n    setOpenRelease,\n    setOpen\n  } = useContext(GlobalStateContext);\n\n  const pegarInformacoesPokemon = async () => {\n    try {\n      const res = await axios.get(pokemon.url);\n      setFotoPokemon(res.data.sprites.other[\"official-artwork\"].front_default);\n      setId(res.data.id);\n      setTypes(res.data.types);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const pokemonTypes = pokemon && types.map(types => {\n    return /*#__PURE__*/_jsxDEV(TypesRow, {\n      type: types.type.name,\n      children: /*#__PURE__*/_jsxDEV(TypeImg, {\n        src: `/icons/${types.type.name}.svg`,\n        alt: \"imagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, types.type.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  });\n  useEffect(() => {\n    pegarInformacoesPokemon();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: !fotoPokemon ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Id, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: id < 100 ? `#0${id}` : `#${id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DivImagem, {\n        onClick: () => goToDetails(navigate, name),\n        children: [/*#__PURE__*/_jsxDEV(CardImg, {\n          src: fotoPokemon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Nome, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TypesRow, {\n        children: pokemonTypes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removePokedex(pokemon, pokedex, setPokedex, setPokeSnackRelease, setOpenRelease, setOpen),\n        children: \"Release\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardPokemon, \"smoeH+a1RFGF4KlT6McO2TJw9Kw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CardPokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardPokemon\");","map":{"version":3,"sources":["C:/Users/evely/GitHub/My-Files/pokedex/src/Components/PokedexCard/PokedexCard.js"],"names":["React","useEffect","useState","useContext","axios","Card","CardImg","DivImagem","TypesContainer","Id","TypesRow","TypeImg","Nome","GlobalStateContext","goToDetails","useNavigate","Loading","CardPokemon","name","pokemon","removePokedex","navigate","fotoPokemon","setFotoPokemon","id","setId","types","setTypes","pokedex","setPokedex","setPokeSnackRelease","setOpenRelease","setOpen","pegarInformacoesPokemon","res","get","url","data","sprites","other","front_default","err","console","log","pokemonTypes","map","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  DivImagem,\r\n  TypesContainer,\r\n  Id,\r\n  TypesRow,\r\n  TypeImg,\r\n  Nome,\r\n} from \"./Style\";\r\nimport GlobalStateContext from \"../../Contexts/GlobalContextState\";\r\nimport { goToDetails } from \"../../Routes/Coordinator\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Loading from \"../../Constants/Loading\";\r\n\r\nexport default function CardPokemon({ name, pokemon, removePokedex }) {\r\n  const navigate = useNavigate();\r\n  const [fotoPokemon, setFotoPokemon] = useState();\r\n  const [id, setId] = useState(0);\r\n  const [types, setTypes] = useState([]);\r\n  const { pokedex, setPokedex, setPokeSnackRelease, setOpenRelease, setOpen } =\r\n    useContext(GlobalStateContext);\r\n\r\n  const pegarInformacoesPokemon = async () => {\r\n    try {\r\n      const res = await axios.get(pokemon.url);\r\n      setFotoPokemon(res.data.sprites.other[\"official-artwork\"].front_default);\r\n      setId(res.data.id);\r\n      setTypes(res.data.types);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const pokemonTypes =\r\n    pokemon &&\r\n    types.map((types) => {\r\n      return (\r\n        <TypesRow key={types.type.name} type={types.type.name}>\r\n          <TypeImg src={`/icons/${types.type.name}.svg`} alt=\"imagem\" />\r\n        </TypesRow>\r\n      );\r\n    });\r\n\r\n  useEffect(() => {\r\n    pegarInformacoesPokemon();\r\n  }, []);\r\n\r\n  return (\r\n    <Card>\r\n      {!fotoPokemon ? (\r\n        <Loading />\r\n      ) : (\r\n        <div>\r\n          <Id>\r\n            <p>{id < 100 ? `#0${id}` : `#${id}`}</p>\r\n          </Id>\r\n          <DivImagem onClick={() => goToDetails(navigate, name)}>\r\n            <CardImg src={fotoPokemon} />\r\n            <Nome>{name}</Nome>\r\n          </DivImagem>\r\n          \r\n            <TypesRow>{pokemonTypes}</TypesRow>\r\n          \r\n          <button\r\n            onClick={() =>\r\n              removePokedex(\r\n                pokemon,\r\n                pokedex,\r\n                setPokedex,\r\n                setPokeSnackRelease,\r\n                setOpenRelease,\r\n                setOpen\r\n              )\r\n            }\r\n          >\r\n            Release\r\n          </button>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}